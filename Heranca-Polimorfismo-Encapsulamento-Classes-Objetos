// Classe principal Main, ponto de entrada do programa
public class Main {
 public static void main(String[] args) {

  // Criação de um objeto da classe Ninja (objeto figurante)
  Ninja figurante = new Ninja();
  System.out.println();

  // Definindo o nome usando o método setNome (encapsulamento)
  figurante.setNome("Figurante");

  // Obtendo o nome usando o método getNome (encapsulamento)
  figurante.getNome();
  System.out.println("Meu nome é: " + figurante.getNome());

  // Chamando o método ataqueBase (polimorfismo no próximo exemplo)
  figurante.ataqueBase();

  // Criação de um objeto da classe Uchiha (herança)
  Uchiha sasuke = new Uchiha();

  // Definindo o nome usando o método setNome da classe pai Ninja
  sasuke.setNome("Sasuke");

  // Chamando o método ataqueBase que foi sobrescrito (polimorfismo)
  sasuke.ataqueBase();

  // Chamando o método específico da classe Uchiha
  sasuke.sharinga();

  // Obtendo e exibindo o nome de Sasuke
  System.out.println("Meu nome é: " + sasuke.getNome());

 }
}
-----------------------------------------------------------------------------------------

// Classe Ninja, representa um conceito geral de um ninja (classe base)
public class Ninja {
    // Atributo privado (encapsulamento)
    private String nome;

    // Método ataqueBase que pode ser sobrescrito (polimorfismo)
    public void ataqueBase(){
        System.out.println("Taquei uma kunai");
    }

    // Método getter para acessar o nome (encapsulamento)
    public String getNome(){
        return nome;
    }

    // Método setter para modificar o nome (encapsulamento)
    public void setNome(String nome){
        this.nome = nome;
    }
}

--------------------------------------------------------------------------------------------------------------------
// Classe Uchiha herda de Ninja (herança)
public class Uchiha extends Ninja {

    // Método exclusivo da classe Uchiha
    public void sharinga(){
        System.out.println("Sou um uchiha e tenho um sharingan");
    }

    // Sobrescrita (override) do método ataqueBase (polimorfismo)
    @Override
    public void ataqueBase() {
        System.out.println("Taquei uma kunai de fogo");
    }
}
